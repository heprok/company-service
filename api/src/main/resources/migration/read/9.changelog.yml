databaseChangeLog:
  - changeSet:
      id: 9
      author: oleg@briolink.com
      changes:
        - dropColumn:
            tableName: connection
            schemaName: ${readSchema}
            columns:
              - column:
                  name: dates_start_collaboration
              - column:
                  name: dates_end_collaboration
        - addColumn:
            tableName: connection
            schemaName: ${readSchema}
            afterColumn: industry_id
            columns:
              - column:
                  name: industry_name
                  type: varchar(255)
                  constraints:
                    nullable: false
              - column:
                  name: buyer_role_name
                  type: varchar(255)
                  constraints:
                    nullable: false
              - column:
                  name: seller_role_name
                  type: varchar(255)
                  constraints:
                    nullable: false
              - column:
                  name: buyer_role
                  type: json
                  constraints:
                    nullable: false
              - column:
                  name: seller_role
                  type: json
                  constraints:
                    nullable: false
              - column:
                  afterColumn: created
                  name: start_collaboration
                  type: Year
                  constraints:
                    nullable: false
              - column:
                  afterColumn: start_collaboration
                  name: end_collaboration
                  type: Year

#        - sql:
#            comment: VIRTUAL ROLE seller
#            sql: ALTER TABLE ${readSchema}.connection ADD COLUMN `seller_role` JSON GENERATED ALWAYS AS (JSON_EXTRACT(data, '$.sellerCompany.role')) NOT NULL AFTER `data`
#            stripComments: true
#        - sql:
#            comment: VIRTUAL ROLE buyer
#            sql: ALTER TABLE ${readSchema}.connection ADD COLUMN `buyer_role` JSON GENERATED ALWAYS AS (JSON_EXTRACT(data, '$.buyerCompany.role')) NOT NULL AFTER `data`
#            stripComments: true
        - sql:
            comment: FULLTEXT index for ${readSchema}.connection table name field
            sql: alter table ${readSchema}.connection add fulltext index idx_fulltext_connection_buyer_name(buyer_name)
            stripComments: true
        - sql:
            comment: FULLTEXT index for ${readSchema}.connection table name field
            sql: alter table ${readSchema}.connection add fulltext index idx_fulltext_connection_seller_name(seller_name)
            stripComments: true
        - sql:
            comment: FULLTEXT index for ${readSchema}.connection table name field
            sql: alter table ${readSchema}.connection add fulltext index idx_fulltext_connection_industry_name(industry_name)
            stripComments: true
        - createTable:
            tableName: connection_service
            schemaName: ${readSchema}
            columns:
              - column:
                  name: connection_id
                  type: varchar(36)
                  constraints:
                    nullable: false
                    primaryKey: true
              - column:
                  name: company_id
                  type: varchar(36)
                  constraints:
                    nullable: false
                    primaryKey: true
              - column:
                  name: service_id
                  type: varchar(36)
                  constraints:
                    nullable: false
                    primaryKey: true
              - column:
                  name: service_name
                  type: varchar(255)
                  constraints:
                    nullable: false
        - sql:
            comment: FULLTEXT index for ${readSchema}.connection_service table name field
            sql: alter table ${readSchema}.connection_service add fulltext index idx_fulltext_connection_service_name(service_name)
            stripComments: true
