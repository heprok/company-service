type Connection {
    id: ID!
    seller: Participant
    buyer: Participant
    verificationStage: VerificationStage!
    services: [ConnectionService!]!
    industry: Industry
}

enum VerificationStage {
    Draft
    Pending
    InProgress
    Verified
    Rejected
}

input ConnectionFilter {
    role: InputConnectionRole
    collaboratorIds: [ID]
    collaboratorRoleIds: [ID]
    industryIds: [ID]
    location: String
    datesOfCollaborators: RangeYear
    verificationStages: [VerificationStage]
    serviceIds: [ID]
}

type Collaborator {
    id: ID!,
    name: String!,
}

enum ConnectionSortBy {
    Created, NameSeller, NameBuyer
}

input ConnectionSort{
    sortBy: ConnectionSortBy!
    direction: SortDirection!
}

type ConnectionList implements PaginatedList {
    items: [Connection]!
    itemsCountByRole: [ConnectionTabItemsCount]!
    totalItems: Int!
}

type ConnectionTabItemsCount {
    id: ID!
    value: Int!
}

type ConnectionRole {
    id: ID!
    name: String!
    type: ConnectionRoleType!
}

input InputConnectionRole {
    id: ID!
    name: String
    type: ConnectionRoleType!
}

enum ConnectionRoleType {
    Buyer, Seller
}

type ConnectionService {
    id: ID!
    name: String!
    startDate: Year!
    endDate: Year
}

